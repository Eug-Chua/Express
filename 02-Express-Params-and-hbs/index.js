// 1. SETUP
// import express
const express = require("express");

// import hbs i.e handlebars
const hbs = require('hbs');

// create a new express application
const app = express();

// register hbs as the template engine i.e. view engine
app.set('view engine', hbs);

// enable static files
// static files refer to content not generated by programming
// `express.static` tells Express we want to use static files
// - the first parameter tells us which directory/folder, relative to index.js, the static file will be in
app.use(express.static('public'));


// 2. ROUTES
app.get('/', function(req, res){
    res.send("Let's start.")
})

// route parameters i.e placeholder parameters
// the URL below contains 1 parameter, and its key is `userName`. The value is whatever you put as `userName` in the URL.
// we identify parameter keys by the string after `:`.
app.get('/hello/:userName', function(req,res){
    console.log(req.params); // in this case `req.params` is `userName` i.e the key.
    res.send(`Hello ${req.params.userName}`); // `req.params.userName` is whatever value I put after `:`.
})

// below, there are 2 keys (i.e req.params): num1 and num2.
app.get('/add/:num1/:num2', function(req,res){
    console.log(req.params);
    const n1 = parseInt(req.params.num1); // `req.params` is `num1`.
    const n2 = parseInt(req.params.num2); // `req.params` is `num2`.
    const sum = n1 + n2;
    res.send(`Sum of numbers is: ${sum}`)
})

app.get('/contact-us', function(req,res){
    // res.render() is similar to res.send()
    // except that the content it sends is the content of the template file; in the case below, 'contact-form.hbs'.
    // Note: All hbs files must be in the `view` folder.
    res.render('contact-form.hbs');
})

app.get('/luckynumber', function(req,res){
    const luckyNumber = Math.floor(Math.random() * 9999 + 1000);
    res.render('lucky.hbs', {
        // see the `lucky.hbs` file: the `number` key below is referenced there 
        "number":luckyNumber,
        "date": new Date()
    });
})

// 3. STARTING THE SERVER
app.listen(3005,function(){
    console.log("Server has started.")
})